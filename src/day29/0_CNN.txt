[신경망]
    - 컴퓨터로 사람의 뇌를 표현 ~~ 네트워크

[노드(뉴런)]
    - 사람의 뇌의 신경 세포(뉴런)을 컴퓨터에서 표현

[레이어(층)]
    - 인공신경망의 기초가 되는 레이어/층
    - 완전연결층: 레이어의 각 노드가 이전 레이어의 모든 노드와 연결된 상태
    - 기본 레이어/층 단계:
        입력층(독립변수) ---> 은닉층 1, 2, 3, ... --->출력층(종속변수)

[합성곱 신경망: Convolutional Neural Network]
    - 이미지를 인식할 수 있는 능력을 갖춘 모델
    - 사용처: 스마트폰 얼굴인식 인증, 자동차 자율주행 탐지, 의료 영상 분석 등
    - 핵심 개념: 1. 합성곱 연산 2. 풀링
    - CNN의 핵심 구조
        - 1. 입력층: 학습할 원본 이미지들을 입력받는다. e.g. 32x32픽셀 이미지를 2차원 리스트/배열로
        - 2. 합성곱층: 이미지를 필터(커널)을 적용해서 중요한 패턴이나 특징을 추출한다. -> 이미지 패턴 감지
        - 3. 풀링층: 이미지 크기를 줄여 계산량 감소, 덜 중요한 세부정보를 무시하고 모델 성능을 높인다. -> 영역 크기 조정
        - 4. 완전연결층: 추출한 특징을 바탕으로 학습하여 분류나 예측을 학습
        - 5. 출력층: 최종 예측 제공 -> 예측 및 확률 출력
    - CNN 특징
        - 1. 공간적 정보 유지
        - 2. 파라미터 효율성
        - 3. 자동 특성 추출
        - 4. 다양한 분야에 적용

[합성곱]
    - CNN(합성곱 신경망)의 핵심 연산
    - 이미지와 커널(필터)를 결합하여 중요한 특징 추출
    - 합성곱 원리
        1. 커넬(필터): 주로 작은 3x3, 5x5 크기, 이미지의 작은 영역과 곱셈, 덧셈 연산을 수행하여 새로운 값(특성 맵) 생성
        2. 스트라이드: 커널이 이미지 위에서 이동하는 간격 (전체 이미지에서 작은 영역(특징 부분)을 이동하며 필터링) -> 스트라이드 n: n칸씩 이동, 클수록 빠른 처리가 가능하나 세부정보가 누락될 수 있다.
        3. 패딩: 커널이 이미지 가장자리를 벗어나지 않도록 이미지 테두리를 0으로 채우는 기법 -> 이미지 크기를 유지하거나 특징 손실을 방지

[커널(필터)]
    - 보통 2차원 형태, 3x3 또는 5x5 크기
    - 이미지의 특정 부분을 곱셈 및 덧셈하여 새로운 값(특성맵)을 생성
    - 커널 원리
        - 1. 합성곱 연산
        - 2. 특성 맵 생성: 각 특징(가장자리, 선, 질감 등)을 나타낸다.
        - 3. 학습 가능한 파라미터(변수): 초기에는 무작위, 역전파 과정을 통해 손실(오차)를 최소화하는 방향으로 자동 조정

[손실(오차)]
    - 측정값이 실제 값과 동떨어진 정도
    - AI의 주요 부분: 진짜와 가짜의 차리을 줄이는 개념

[역전파]
    - 신경망 학습을 위한 핵심 알고리즘, 손실 함수의 기울기(그래디언트)를 계산하고 가중치를 추출한다.

[가중치]
    - 표본(특정 집단)의 각 관측치에 대한 중요도를 나타낸다. e.g. 유튜브 알고리즘: 시청자가 많이 본 영상 유형을 더 추천
    - 신경망에서 중요한 파라미터, 입력값에 가중치를 계산한 후 학습 -> 역전파를 통해 학습된 가중치로 다시 가중치 업데이트 -> 반복학습으로 손실 최소화 (경사하강법, 미분)
    - 전체적인 학습 흐름
        - 1. 데이터를 신경망에 입력
        - 2. 입력값과 학습값의 차이를 계산하여 손실을 구한다
        - 3. 역전파(계산법)을 통해 손실(오차)함수에 대한 각 가중치의 기줄기 계산
        - 4. 경사하강법을 사용하여 가중치 업데이트
        - 5. 이 과정을 반복하여 신경망 성능을 최적화

[채널]
    - 색상 정보를 가진 각 구성요소
    - red: r, green: g, blue: b 3가지 기본 색상 채널이 있다.
        - 흑백: 회색 1채널
        - 컬러: RGB 3채널, RGB + alpha 4채널

[스트라이드]
    - 커널(필터)가 한번에 몇 픽셀 이동하는지 결정 -> 이미지 크기와 특성 맵의 크기 조정
    - 주로 1 또는 2
    - 높은 스트라이드는 계산효율성 및 일반화에 좋지만 세부정보 손실 우려가 있다
    - 낮은 스트라이드는 세부정보 유지에 좋지만 계산비용 증가와 과적합 우려가 있다

[패딩]
    - 이미지의 가장자리에 주로 0으로 채워진 픽셀을 추가
    - 특징:
        1. 특성 맵 크기 유지: 패딩을 추가하면 필터가 이미지의 모든 부분을 고르게 처리할 수 있다.
        2. 정보 손실 방지: 종종 가장자리 정보가 손실되는데 패딩 추가로 가장자리 정보 손상을 방지
        3. 학습 안정성 향상: 경계(가장자리)의 왜곡을 줄일 수 있다 (경계 효과를 줄인다)
        4. 연산 효율성: 더 복잡한 패턴을 학습하는 데에 도움이 된다.

[폴링]
    - 필터(커널)을 사용하여 이미지의 작은 영역에서 특정 통계 값을 계산하여 크기를 줄이는 과정
    - 최대값이나 평균값을 선택하여 그 영역의 하나의 값으로 대체한다.
    - 특징:
        1. 특징 추출: 중요한 특징을 추출하고 강조하여, 각 영역에서 큰 값 또는 평균값을 선택하므로 중요한 정보 보존 가능
        2. 차원 축소: 메모리 사용량 감소, 학습 속도를 높이고 깊은 신경망 설계 가능
        3. 불변성 향상: 더 일반화한 신경망 학습 가능
        4. 과적합 방지: 모델의 복잡성을 줄일 수 있다.

[픽셀]
    - 이미지를 구성하는 기본 단위(점) e.g. 720p, 1080p

[이미지에서 커널(필터) 특성/특징 추출]
    - 픽셀 추출 [흑백일 시  0 ~ 255, 컬러일 시 R(0 ~ 255), G(0 ~ 255), B(0 ~ 255)]
    - 주요 특성:
        1. 모서리/선: 사각형인지 삼각형인지
        2. 색상/질감: 티셔츠의 매끈한/거친 느낌 등
        3. 얼굴 인식: 눈 코 입 부위 등
        그 외
    - 커널(필터): 안경/에어컨 필터 등등 시각적으로 이미지에서 중요한 특성(모서리, 질감 - 0 ~ 255)를 찾아내는 과정
    - 특성맵: 이러한 찾은 특성을 기록

